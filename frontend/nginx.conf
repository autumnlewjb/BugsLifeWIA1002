upstream backend {
    server spring-app:8080;
}

upstream frontend {
    server frontend-app:80;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # SSL configuration
    #
    # listen 443 ssl default_server;
    # listen [::]:443 ssl default_server;
    #
    # Note: You should disable gzip for SSL traffic.
    # See: https://bugs.debian.org/773332
    #
    # Read up on ssl_ciphers to ensure a secure configuration.
    # See: https://bugs.debian.org/765782
    #
    # Self signed certs generated by the ssl-cert package
    # Don't use them in a production server!
    #
    # include snippets/snakeoil.conf;

    server_name bugslife.ga www.bugslife.ga;

    location / {
        return 301 https://$host$request_uri;
    }

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    # pass PHP scripts to FastCGI server
    #
    #location ~ \.php$ {
    #       include snippets/fastcgi-php.conf;
    #
    #       # With php-fpm (or other unix sockets):
    #       fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
    #       # With php-cgi (or other tcp sockets):
    #       fastcgi_pass 127.0.0.1:9000;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #       deny all;
    #}
}

server {
    listen 443 ssl;

    ssl_certificate /etc/letsencrypt/live/bugslife.ga/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bugslife.ga/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;

    server_name bugslife.ga www.bugslife.ga;

    root /var/www/html;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ /index.html =404;
    }

    location /api {
	    client_max_body_size 100M;
        proxy_pass http://backend;
	    proxy_cookie_domain localhost $host;
        proxy_set_header X-ForwardedFor $remote_addr;
	    proxy_set_header Host $http_host;
	    proxy_cookie_path / "/; HTTPOnly; secure";
    }

    location /image {
	    root /var/www/static;
	    try_files $uri $uri/ =404;
    }
}
